type User @model @auth(rules: [{allow: owner, operations: [read, update], provider: userPools}, {allow: groups, groups: ["AdminGroup"], operations: [create, read, update, delete]}]) {
  id: ID!
  firstName: String!
  email: AWSEmail!
  username: String!
  Folios: [Folio] @hasMany(indexName: "byUser", fields: ["id"])
  picture: AWSURL
}

type Folio @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: owner, operations: [read, create, update, delete], provider: userPools}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  isPublished: Boolean!
  intro: String
  photos: [AWSURL]
  FolioType: FolioType!
  SocialLinks: [SocialLink]
  customDetails: AWSJSON!
  User: User @belongsTo(fields: ["userID"])
}

type SocialLink @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: owner, operations: [read, create, update, delete], provider: userPools}]) {
  id: ID!
  SocialPlatformType: SocialPlatformType!
  urlPostfix: AWSURL!
}

enum FolioType {
  TIMELINE
  RESEARCH
  RESTAURANT
  LANDING
}

enum SocialPlatformType {
  YOUTUBE
  INSTAGRAM
  TWITTER
  LINKEDIN
  GITHUB
  FACEBOOK
  TIKTOK
}
 