type User @model @auth(rules: [{allow: owner, operations: [read, update], provider: userPools}, {allow: groups, groups: ["AdminGroup"], operations: [create, read, update, delete]}]) {
  id: ID!
  firstName: String!
  email: AWSEmail!
  username: String!
  Folios: [Folio] @hasMany(indexName: "byUser", fields: ["id"])
  picture: AWSURL
}

type Folio @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: owner, operations: [read, create, update, delete], provider: userPools}]) {
  id: ID!
  userID: ID! @index(name: "byUser")
  User: User @belongsTo(fields: ["userID"])

  publishedData: PublishedFolioData @hasOne
  draftData: DraftFolioData @hasOne
  title: String!
  description: String
  folioType: FolioType!
  folioNumber: FolioNumber!
  customMetadata: AWSJSON
}

type DraftFolioData @model @auth(rules: [{allow: owner, operations: [read, create, update, delete], provider: userPools}]) {
  id: ID!
  tamplate: Template
}

type PublishedFolioData @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: owner, operations: [read, create, update, delete], provider: userPools}]) {
  id: ID!
  tamplate: Template
}

interface Template {
  id: ID!
  SocialLinks: [SocialLink]
}

type T2 implements Template {
  id: ID!
  SocialLinks: [SocialLink]
  name: String!
  picture: AWSURL
  mainIcon: String
  tags: [String]
  tagsTitle: String
  resumeUrl: AWSURL


  englishData: T2En
  arabicData: T2Ar
}

type T2En {
  timeline: [T2TItem]
  gallery1: T2gallery
  gallery2: T2gallery
  aboutGreeting: String
  aboutDescription: String
}

type T2Ar {
  timeline: [T2TItem]
  gallery1: T2gallery
  gallery2: T2gallery
  aboutGreeting: String
  aboutDescription: String
}

type T2gallery{
  id: ID!
  title: String
  pictures: [String]
  description: String
  tags: [String]
  url: AWSURL
  startDate: AWSDate
}

type T2TItem {
  id: ID!
  title: String!
  description: String!
  startDate: AWSDate!
  pictures: [String]
  url: String
  tags: [String]
  importantTags: [String]
  place: String
  endDate: AWSDate
}







type SocialLink {
  id: ID!
  SocialPlatformType: SocialPlatformType!
  urlPostfix: String!
}

enum FolioType {
  TIMELINE
  RESEARCH
  RESTAURANT
  LANDING
  ORGANIZATION
}

enum FolioNumber {
  ONE
  TWO
}

enum SocialPlatformType {
  YOUTUBE
  INSTAGRAM
  TWITTER
  LINKEDIN
  GITHUB
  FACEBOOK
  TIKTOK
}
 






input TemplateInput {
  id: ID
  SocialLinks: [SocialLinkInput]
}

 input SocialLinkInput {
  id: ID
  SocialPlatformType: SocialPlatformType
  urlPostfix: String
}