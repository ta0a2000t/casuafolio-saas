type User @model @auth(rules: [{allow: owner, provider: userPools}]) {
  id: ID!
  firstName: String!
  username: String!
  portfolio: [Portfolio] @hasMany
  research: [Research] @hasMany
  charity: [Charity] @hasMany
  restaurant: [Restaurant] @hasMany
}

type SocialLinks @model @auth(rules: [{allow: private, provider: iam}]) {
  id: ID!
  github: String
  linkedin: String
  twitter: String
  instagram: String
  youtube: String
  tiktok: String
  facebook: String
}

type Portfolio @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: owner, provider: userPools}]) {
  id: ID!
  isPublished: Boolean!
  socialLinks: SocialLinks @hasOne
  intro: String
  photos: [String]
  firstName: String!
  lastName: String
  resumeLink: String
  sections: [Section] @hasMany
}

type Section @model @auth(rules: [{allow: private, provider: iam}]) {
  id: ID!
  name: String
  title: String
  events: [Event] @hasMany
  portfolioID: ID!
  portfolio: Portfolio @belongsTo(fields: ["portfolioID"])
}

type Event @model @auth(rules: [{allow: private, provider: iam}]) {
  id: ID!
  name: String
  logo: String
  role: String
  dates: DateRange @hasOne
  bullets: [String]
  skills: [String]
  photos: [String]
  link: String
  sectionID: ID!
  section: Section @belongsTo(fields: ["sectionID"])
}

type DateRange @model @auth(rules: [{allow: private, provider: iam}]) {
  id: ID!
  start: AWSDate!
  end: AWSDate
}

type Research @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: owner, provider: userPools}]) {
  id: ID!
  isPublished: Boolean
  socialLinks: SocialLinks @hasOne
  intro: String
  photos: [String]
}

type Charity @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: owner, provider: userPools}]) {
  id: ID!
  isPublished: Boolean
  socialLinks: SocialLinks @hasOne
  intro: String
  photos: [String]
}

type Restaurant @model @auth(rules: [{allow: public, operations: [read], provider: iam}, {allow: owner, provider: userPools}]) {
  id: ID!
  isPublished: Boolean
  socialLinks: SocialLinks @hasOne
  intro: String
  photos: [String]
}
 